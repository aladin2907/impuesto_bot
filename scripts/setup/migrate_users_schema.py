#!/usr/bin/env python3
"""
Migration script: Simplify users schema
Removes user_channels table, moves telegram_id to users
"""

import os
import sys
import psycopg2
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

SUPABASE_DB_URL = os.getenv('SUPABASE_DB_URL')

if not SUPABASE_DB_URL:
    print("‚ùå SUPABASE_DB_URL not found in .env")
    sys.exit(1)

print("=" * 70)
print("  –ú–ò–ì–†–ê–¶–ò–Ø –°–•–ï–ú–´ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –í SUPABASE")
print("=" * 70)
print()
print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï!")
print("   –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏–∑–º–µ–Ω–∏—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
print("   - –î–æ–±–∞–≤–∏—Ç telegram_id –Ω–∞–ø—Ä—è–º—É—é –≤ —Ç–∞–±–ª–∏—Ü—É users")
print("   - –ü–µ—Ä–µ–Ω–µ—Å—ë—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ user_channels –≤ users")
print("   - –£–¥–∞–ª–∏—Ç —Ç–∞–±–ª–∏—Ü—É user_channels")
print("   - –û–±–Ω–æ–≤–∏—Ç —Ç–∞–±–ª–∏—Ü—É messages (channel_id -> user_id)")
print()

confirm = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): ")
if confirm.lower() != 'yes':
    print("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
    sys.exit(0)

print()
print("üîç –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Supabase...")

try:
    conn = psycopg2.connect(SUPABASE_DB_URL)
    conn.autocommit = False
    cursor = conn.cursor()
    
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
    print()
    
    # Check current state
    print("üìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã:")
    print()
    
    cursor.execute("SELECT COUNT(*) FROM users")
    users_count = cursor.fetchone()[0]
    print(f"   Users: {users_count}")
    
    cursor.execute("SELECT COUNT(*) FROM user_channels")
    channels_count = cursor.fetchone()[0]
    print(f"   User channels: {channels_count}")
    
    cursor.execute("SELECT COUNT(*) FROM messages")
    messages_count = cursor.fetchone()[0]
    print(f"   Messages: {messages_count}")
    print()
    
    confirm2 = input("–ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é? (yes/no): ")
    if confirm2.lower() != 'yes':
        print("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        conn.close()
        sys.exit(0)
    
    print()
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é...")
    print()
    
    # Read migration SQL
    migration_sql_path = 'database/migrate_users_schema.sql'
    
    if not os.path.exists(migration_sql_path):
        print(f"‚ùå –§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {migration_sql_path}")
        conn.close()
        sys.exit(1)
    
    with open(migration_sql_path, 'r', encoding='utf-8') as f:
        migration_sql = f.read()
    
    # Execute migration
    cursor.execute(migration_sql)
    conn.commit()
    
    print()
    print("=" * 70)
    print("‚úÖ –ú–ò–ì–†–ê–¶–ò–Ø –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("=" * 70)
    print()
    
    # Show final state
    print("üìä –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã:")
    print()
    
    cursor.execute("""
        SELECT 
            column_name,
            data_type,
            is_nullable
        FROM information_schema.columns
        WHERE table_name = 'users'
            AND column_name IN ('telegram_id', 'username', 'first_name', 'last_name', 'phone', 'metadata')
        ORDER BY ordinal_position;
    """)
    
    columns = cursor.fetchall()
    print("   –ù–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ users:")
    for col in columns:
        nullable = "NULL" if col[2] == 'YES' else "NOT NULL"
        print(f"     - {col[0]:<15} {col[1]:<20} {nullable}")
    
    print()
    
    # Check indexes
    cursor.execute("""
        SELECT indexname
        FROM pg_indexes
        WHERE tablename = 'users'
            AND indexname LIKE '%telegram%';
    """)
    
    indexes = cursor.fetchall()
    if indexes:
        print("   –ò–Ω–¥–µ–∫—Å—ã:")
        for idx in indexes:
            print(f"     ‚úÖ {idx[0]}")
    
    print()
    
    # Final count
    cursor.execute("SELECT COUNT(*) FROM users WHERE telegram_id IS NOT NULL")
    users_with_telegram = cursor.fetchone()[0]
    print(f"   Users —Å telegram_id: {users_with_telegram}")
    
    cursor.close()
    conn.close()
    
    print()
    print("‚úÖ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º:")
    print("   SELECT * FROM users WHERE telegram_id = 123456789;")
    print()
    
except psycopg2.Error as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    if conn:
        conn.rollback()
        conn.close()
    sys.exit(1)
    
except Exception as e:
    print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    if conn:
        conn.rollback()
        conn.close()
    sys.exit(1)

