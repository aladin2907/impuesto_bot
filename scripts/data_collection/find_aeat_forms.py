#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ñ–æ—Ä–º—ã AEAT
"""

import os
import sys
import requests
from pathlib import Path
from urllib.parse import urljoin, urlparse
import time
import re

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root))

from app.config.settings import Settings


class AEATFormsFinder:
    """–ö–ª–∞—Å—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ñ–æ—Ä–º—ã AEAT"""
    
    def __init__(self):
        self.settings = Settings()
        self.session = requests.Session()
        self.session.headers.update({
            'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        })
        
        # –ë–∞–∑–æ–≤—ã–µ URL –¥–ª—è –ø–æ–∏—Å–∫–∞
        self.base_urls = [
            "https://sede.agenciatributaria.gob.es/",
            "https://sede.agenciatributaria.gob.es/static_files/Sede/Procedimientos_ayuda/Modelos/",
            "https://sede.agenciatributaria.gob.es/static_files/Sede/Procedimientos_ayuda/Modelos/Modelos_2025/",
            "https://sede.agenciatributaria.gob.es/static_files/Sede/Procedimientos_ayuda/Modelos/Modelos_2024/",
        ]
        
        # –§–æ—Ä–º—ã –¥–ª—è –ø–æ–∏—Å–∫–∞
        self.target_forms = [
            "303",  # IVA
            "111",  # Retenciones
            "130",  # IRPF Aut√≥nomos
            "131",  # IRPF Aut√≥nomos
            "036",  # Alta Aut√≥nomo
            "037",  # Alta Aut√≥nomo Simplificado
        ]
    
    def search_forms_on_page(self, url: str) -> list:
        """–ò—â–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–æ—Ä–º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"""
        try:
            print(f"üîç –ò—â–µ–º —Ñ–æ—Ä–º—ã –Ω–∞: {url}")
            response = self.session.get(url, timeout=30)
            response.raise_for_status()
            
            # –ò—â–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ PDF —Ñ–∞–π–ª—ã
            pdf_links = re.findall(r'href="([^"]*\.pdf[^"]*)"', response.text, re.IGNORECASE)
            
            found_forms = []
            for link in pdf_links:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–æ–º–µ—Ä —Ñ–æ—Ä–º—ã
                for form_num in self.target_forms:
                    if form_num in link:
                        full_url = urljoin(url, link)
                        found_forms.append({
                            "form": form_num,
                            "url": full_url,
                            "source": url
                        })
                        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ñ–æ—Ä–º–∞ {form_num}: {full_url}")
            
            return found_forms
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –Ω–∞ {url}: {e}")
            return []
    
    def test_form_url(self, form_info: dict) -> bool:
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–æ—Ä–º—É"""
        try:
            response = self.session.head(form_info["url"], timeout=10)
            if response.status_code == 200:
                print(f"   ‚úÖ –§–æ—Ä–º–∞ {form_info['form']} –¥–æ—Å—Ç—É–ø–Ω–∞")
                return True
            else:
                print(f"   ‚ùå –§–æ—Ä–º–∞ {form_info['form']} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.status_code}")
                return False
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ä–º—ã {form_info['form']}: {e}")
            return False
    
    def find_all_forms(self) -> list:
        """–ò—â–µ—Ç –≤—Å–µ —Ñ–æ—Ä–º—ã –Ω–∞ –≤—Å–µ—Ö –±–∞–∑–æ–≤—ã—Ö URL"""
        print("üöÄ –ü–æ–∏—Å–∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ñ–æ—Ä–º—ã AEAT")
        print("=" * 60)
        
        all_forms = []
        
        for base_url in self.base_urls:
            forms = self.search_forms_on_page(base_url)
            all_forms.extend(forms)
            time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        
        # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        unique_forms = {}
        for form in all_forms:
            form_num = form["form"]
            if form_num not in unique_forms:
                unique_forms[form_num] = form
        
        print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ñ–æ—Ä–º: {len(unique_forms)}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
        print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º:")
        working_forms = []
        for form_num, form_info in unique_forms.items():
            if self.test_form_url(form_info):
                working_forms.append(form_info)
        
        return working_forms
    
    def download_working_forms(self, forms: list) -> None:
        """–°–∫–∞—á–∏–≤–∞–µ—Ç —Ä–∞–±–æ—á–∏–µ —Ñ–æ—Ä–º—ã"""
        if not forms:
            print("‚ùå –ù–µ—Ç —Ä–∞–±–æ—á–∏—Ö —Ñ–æ—Ä–º –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
            return
        
        download_dir = Path("data/aeat_forms")
        download_dir.mkdir(parents=True, exist_ok=True)
        
        print(f"\nüì• –°–∫–∞—á–∏–≤–∞–µ–º {len(forms)} —Ñ–æ—Ä–º:")
        
        for form_info in forms:
            try:
                form_num = form_info["form"]
                url = form_info["url"]
                
                print(f"\nüìÑ –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ä–º—É {form_num}")
                print(f"   URL: {url}")
                
                response = self.session.get(url, timeout=30)
                response.raise_for_status()
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º
                filename = f"Modelo_{form_num}_AEAT.pdf"
                file_path = download_dir / filename
                
                with open(file_path, 'wb') as f:
                    f.write(response.content)
                
                print(f"   ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {file_path}")
                print(f"   üìä –†–∞–∑–º–µ—Ä: {len(response.content)} –±–∞–π—Ç")
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–æ—Ä–º—ã {form_num}: {e}")
            
            time.sleep(2)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è–º–∏


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    finder = AEATFormsFinder()
    
    print("üîç TuExpertoFiscal NAIL - –ü–æ–∏—Å–∫ —Ñ–æ—Ä–º AEAT")
    print("=" * 60)
    
    # –ò—â–µ–º —Ñ–æ—Ä–º—ã
    working_forms = finder.find_all_forms()
    
    if working_forms:
        print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(working_forms)} —Ä–∞–±–æ—á–∏—Ö —Ñ–æ—Ä–º:")
        for form in working_forms:
            print(f"   üìÑ –§–æ—Ä–º–∞ {form['form']}: {form['url']}")
        
        # –°–∫–∞—á–∏–≤–∞–µ–º
        finder.download_working_forms(working_forms)
    else:
        print("\n‚ùå –†–∞–±–æ—á–∏–µ —Ñ–æ—Ä–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∏—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é –Ω–∞ —Å–∞–π—Ç–µ AEAT")


if __name__ == "__main__":
    main()
